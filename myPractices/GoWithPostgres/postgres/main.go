package main

import (
  // "database/sql"
  "fmt"
  "log"
  _ "github.com/lib/pq"
  "github.com/jmoiron/sqlx"
)

var schema = `
  CREATE TABLE categories (
    id int generated by default as identity primary key ,
    name varchar(64) not null
  );
  CREATE TABLE articles (
    id int generated by default as identity primary key ,
    category_id int not null references categories(id),
    name varchar(256) not null
  )
`
type Categories struct {
    Id     int      `db:"id"`
    Name   string   `db:"name"`
}

type Articles struct {
   Id              int     `db:"id"`
   Category_id     int     `db:"category_id"`
   Name            string  `db:"name"`
}

type Data struct {
   Id             int      `db:"id"`
   Category       string   `db:"category"`
   Name           string   `db:"name"`
}

func main() {

    db , err := sqlx.Connect("postgres","user=kamron dbname=newdb host=localhost password=kamron sslmode=disable")

    if err != nil {
      log.Fatalln(err)
    }

    db.MustExec(schema)

    categories := []Categories{}
    categories = append(categories,Categories{1,"AboutSport"})
    categories = append(categories,Categories{2,"AboutPolitics"})
    categories = append(categories,Categories{3,"AboutEducation"})

    articles := []Articles{}
    articles = append(articles,Articles{Id:1,Category_id:1,Name:"Mahmud Murodovni So'ngi jangi"})
    articles = append(articles,Articles{Id:2,Category_id:1,Name:"Shomurodov ni sotib yuborishdimi???"})
    articles = append(articles,Articles{Id:3,Category_id:2,Name:"Deputatlar"})
    articles = append(articles,Articles{Id:4,Category_id:3,Name:"Kredit modul tizmi yaratildi"})
    articles = append(articles,Articles{Id:5,Category_id:3,Name:"Magistratura imtihonsiz kirishga ruhsat berildi, lish s sertifikatom"})

    fmt.Println(categories)
    tx := db.MustBegin()
    for c := range categories {
      tx.MustExec("insert into categories(id,name) values($1,$2)",categories[c].Id,categories[c].Name)
        fmt.Println(c)
    }
    for a := range articles {
      tx.MustExec("insert into articles(id,category_id,name) values($1,$2,$3)",articles[a].Id,articles[a].Category_id,articles[a].Name)

    }
    tx.Commit()

    data := []Articles{}
    err = db.Select(&data,"SELECT c.name , a.name , a.id FROM categories c  INNER JOIN articles a ON c.id=a.category_id")

    fmt.Println(data)





















}
